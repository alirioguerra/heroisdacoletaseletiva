body {
  @include typePrimary();
  overflow: hidden;
}
html {
  scroll-behavior: smooth;
}
ul {
  padding: 0;
  margin: 0;
  li {
    padding: 0;
    margin: 0;
  }
}

p,
a {
  @include bp(cel) {
    font-size: 0.89em;
  }
}
.section {
  padding: 5rem 0.5rem;
}

.background-texture {
  background: url('./assets/img/background.png') center center no-repeat;
  background-size: cover;
  background-color: $color-4;
}

.title {
  text-align: center;
  @include typePrimary(700, 60);
  @include bp(cel) {
    font-size: 2em;
  }
  &-primary {
    color: $color-2;
  }
  &-secondary {
    color: $color-1;
  }
}
.subtitle {
  text-align: center;
  max-width: 610px;
  margin: 0 auto 40px;
  @include bp(cel) {
    font-size: 0.8em;
  }
  &-primary {
    color: #fff;
  }
  &-secondary {
    color: #6c7e34;
  }
}

p {
  letter-spacing: 1.3px;
  &.small {
    font-size: 70%;
    text-align: center;
    color: $color-5;
    margin: 40px 0;
  }
}

.btn {
  display: block;
  text-transform: uppercase;
  text-align: center;
  padding: 0 10px;
  height: 66px;
  display: flex;
  justify-content: center;
  align-items: center;
  @include radius();
  @include typePrimary(700);
  &-primary {
    color: $color-1;
    background-color: $color-2;
    transition: all 0.35s ease;
    &:hover {
      -webkit-box-shadow: 0px 0px 21px 0px rgba(196, 240, 67, 0.82);
      -moz-box-shadow: 0px 0px 21px 0px rgba(196, 240, 67, 0.82);
      box-shadow: 0px 0px 21px 0px rgba(196, 240, 67, 0.82);
    }
  }
  &-center {
    margin: 20px auto;
    max-width: 600px;
  }
}
/* width */
::-webkit-scrollbar {
  width: 2px;
}

/* Track */
::-webkit-scrollbar-track {
  background: #f1f1f1;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 2px;
  background: #888;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555;
}
.owl-dots {
  display: none;
}
.arrow {
  width: 0px;
  margin: 0 auto;
  position: relative;
  display: none;
  @include bp(tab) {
    display: block;
  }

  &:after {
    content: 'â†’';
    color: $color-2;
    animation: move 0.35s ease;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    display: block;
    position: absolute;
  }
}

@keyframes move {
  from {
    transform: translate3D(0, 0, 0);
  }
  to {
    transform: translate3D(10%, 0, 0);
  }
}
